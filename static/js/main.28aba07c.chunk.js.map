{"version":3,"sources":["config/context.js","config/Firebase.js","config/SignUpForm.js","config/SignInForm.js","charts/ChartLayout.js","editor/FirebaseUserInput.js","editor/TableLayout.js","config/SignOutButton.js","editor/ChartEditorLayout.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","databycode","code","users","app","initializeApp","this","database","INITIAL_STATE","username","passwordOne","passwordTwo","error","MyForm","props","onSubmit","event","state","firebase","then","authUser","set","setState","catch","preventDefault","onChange","target","name","value","isInvalid","style","marginTop","className","type","placeholder","disabled","message","Component","SignUpForm","Consumer","res","onLogin","providerData","marginBottom","SignInForm","ChartLayout","options","chart","id","xaxis","categories","series","data","width","inputs","firebasecode","TableLayout","handleKeyPress","key","handleSeriesDataChange","selected","console","log","handleClick","bind","handleChange","dataline","seriesLine","map","item","index","padding","marginRight","onKeyPress","maxWidth","onClick","SignOutButton","DoSignOut","e","ChartEditorLayoutWithFirebase","isUpdating","activeSeriesLine","setActiveLine","activeLine","useruid","once","snapshot","userdataObject","val","userdataList","Object","keys","line","lineIndex","seriename","newseriedata","oldValue","xaxisItem","userdataitem","filter","dataitem","dimension1","dimension2","length","parseFloat","datalineArrayElement","elementValue","datalineDataArray","timestamp","Date","now","category","xaxe","child","source","off","lines","maxHeight","ChooseLineInSeries","typeofchart","ChartEditorLayout","App","replace","basename","exact","path","component","LineChart","AreaChart","ColumnChart","BarChart","MixedChart","CandlestickChart","ScatterChart","About","match","params","AppWithAuth","Fragment","Boolean","window","location","hostname","ReactDOM","render","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2QAIeA,EAFSC,IAAMC,cAAc,M,iBCetCC,G,YAAS,CACXC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,GACfC,kBAAmB,eACnBC,MAAO,wCA0CIC,EA/BX,aAAe,IAAD,gCAQdC,iCAAmC,SAACC,EAAOC,GAAR,OAC/B,EAAKC,KAAKC,+BAA+BH,EAAOC,IATtC,KAWdG,6BAA+B,SAACJ,EAAOC,GAAR,OAC3B,EAAKC,KAAKG,2BAA2BL,EAAOC,IAZlC,KAcdK,UAAY,kBAAM,EAAKJ,KAAKK,WAdd,KAgBdC,gBAAkB,SAAAR,GAAK,OAAI,EAAKE,KAAKO,uBAAuBT,IAhB9C,KAkBdU,iBAAmB,SAAAT,GAAQ,OACvB,EAAKC,KAAKS,YAAYC,eAAeX,IAnB3B,KAuBdY,KAAO,SAAAC,GAAG,OAAI,EAAKC,GAAGC,IAAR,qBAA0BF,KAvB1B,KAyBdG,WAAa,SAAAC,GAAI,OAAI,EAAKH,GAAGC,IAAR,qBAA0BE,KAzBjC,KA2BdC,MAAQ,kBAAM,EAAKJ,GAAGC,IAAI,UA1BtBI,IAAIC,cAAc/B,GAClBgC,KAAKpB,KAAOkB,IAAIlB,OAChBoB,KAAKP,GAAKK,IAAIG,Y,yjBChCtB,IAAMC,EAAgB,CACpBC,SAAU,GACVzB,MAAO,GACP0B,YAAa,GACbC,YAAa,GACbC,MAAO,MASHC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAIRC,SAAW,SAAAC,GAAU,IAAD,EACuB,EAAKC,MAAtCR,EADU,EACVA,SAAUzB,EADA,EACAA,MAAO0B,EADP,EACOA,YAEzB,EAAKI,MAAMI,SACRnC,iCAAiCC,EAAO0B,GACxCS,KAAK,SAAAC,GAEJ,OAAO,EAAKN,MAAMI,SAASrB,KAAKuB,EAASvB,KAAKC,KAAKuB,IAAI,CACrDZ,WACAzB,YAGHmC,KAAK,WACJ,EAAKG,SAAL,KAAmBd,MAEpBe,MAAM,SAAAX,GACL,EAAKU,SAAS,CAAEV,YAGpBI,EAAMQ,kBAxBW,EA2BnBC,SAAW,SAAAT,GACT,EAAKM,SAAL,eAAiBN,EAAMU,OAAOC,KAAOX,EAAMU,OAAOE,SA1BlD,EAAKX,MAAL,KAAkBT,GAFD,E,sEA+BT,IAAD,EACsDF,KAAKW,MAA1DR,EADD,EACCA,SAAUzB,EADX,EACWA,MAAO0B,EADlB,EACkBA,YAAaC,EAD/B,EAC+BA,YAAaC,EAD5C,EAC4CA,MAE7CiB,EACJnB,IAAgBC,GACA,KAAhBD,GACU,KAAV1B,GACa,KAAbyB,EAEF,OACE,6BACE,0BAAMM,SAAUT,KAAKS,SAAUe,MAAO,CAAEC,UAAW,SACjD,yBAAKC,UAAU,mBACb,wBAAIA,UAAU,mBAAd,6HAEA,2BACEL,KAAK,WACLC,MAAOnB,EACPgB,SAAUnB,KAAKmB,SACfQ,KAAK,OACLC,YAAY,UAGhB,yBAAKF,UAAU,mBACb,2BACEL,KAAK,QACLC,MAAO5C,EACPyC,SAAUnB,KAAKmB,SACfQ,KAAK,OACLC,YAAY,WAGhB,yBAAKF,UAAU,mBACb,2BACEL,KAAK,cACLC,MAAOlB,EACPe,SAAUnB,KAAKmB,SACfQ,KAAK,WACLC,YAAY,cAIhB,yBAAKF,UAAU,mBACb,2BACEL,KAAK,cACLC,MAAOjB,EACPc,SAAUnB,KAAKmB,SACfQ,KAAK,WACLC,YAAY,sBAIhB,yBAAKF,UAAU,mBACb,4BAAQG,SAAUN,EAAWI,KAAK,UAAlC,gHAGCrB,GAAS,2BAAIA,EAAMwB,gB,GAxFXC,aAiGNC,EAvGI,kBACjB,kBAAC,EAAgBC,SAAjB,KACG,SAAArB,GAAQ,OAAI,kBAAC,EAAD,CAAQA,SAAUA,O,mjBCXnC,IAMMV,EAAgB,CACpBxB,MAAO,GACPC,SAAU,GACV2B,MAAO,KACPf,KAAM,MAGFgB,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAKRC,SAAW,SAAAC,GAAU,IAAD,EACU,EAAKC,MAAzBjC,EADU,EACVA,MAAOC,EADG,EACHA,SAEf,EAAK6B,MAAMI,SACR9B,6BAA6BJ,EAAOC,GACpCkC,KAAK,SAACqB,GACL,EAAKlB,SAAL,KAAmBd,EAAnB,CAAkCX,KAAM2C,EAAI3C,KAAKb,SAGjD,EAAK8B,MAAM2B,QAAQD,EAAI3C,KAAK6C,gBAE7BnB,MAAM,SAAAX,GACL,EAAKU,SAAS,CAAEV,YAGpBI,EAAMQ,kBArBW,EAwBnBC,SAAW,SAAAT,GACT,EAAKM,SAAL,eAAiBN,EAAMU,OAAOC,KAAOX,EAAMU,OAAOE,SAtBlD,EAAKX,MAAL,KAAkBT,GAHD,E,sEA4BT,IAAD,EAC4BF,KAAKW,MAAhCjC,EADD,EACCA,MAAOC,EADR,EACQA,SAAU2B,EADlB,EACkBA,MAEnBiB,EAAyB,KAAb5C,GAA6B,KAAVD,EAErC,OACE,6BACGsB,KAAKW,MAAMpB,KACV,2BAAIS,KAAKW,MAAMpB,MACf,0BAAMkB,SAAUT,KAAKS,SAAUe,MAAO,CAACa,aAAc,SACrD,yBAAKX,UAAU,mBAEb,2BACEL,KAAK,QACLC,MAAO5C,EACPyC,SAAUnB,KAAKmB,SACfQ,KAAK,OACLC,YAAY,kBAEd,2BACEP,KAAK,WACLC,MAAO3C,EACPwC,SAAUnB,KAAKmB,SACfQ,KAAK,WACLC,YAAY,aAEd,4BAAQC,SAAUN,EAAWI,KAAK,UAAlC,mCAICrB,GAAS,2BAAIA,EAAMwB,e,GA3DXC,aAoENO,EAjFI,SAAC9B,GAAD,OACjB,kBAAC,EAAgByB,SAAjB,KACG,SAAArB,GAAQ,OAAI,kBAAC,EAAD,eAAQA,SAAUA,GAAcJ,O,gCCqClC+B,E,YAxCb,WAAY/B,GAAQ,IAAD,8BACjB,4CAAMA,KAEDG,MAAQ,CACX6B,QAAS,CACPC,MAAO,CACLC,GAAI,aAENC,MAAO,CACLC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAGjEC,OAAQ,EAAKrC,MAAMqC,OAAS,EAAKrC,MAAMqC,OACvC,CACE,CACExB,KAAM,WACNyB,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAhB/B,E,sEAuBjB,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,IAAD,CACEc,QAASxC,KAAKW,MAAM6B,QACpBK,OAAQ7C,KAAKW,MAAMkC,OACnBlB,KAAK,MACLoB,MAAM,e,GAhCMhB,aCMLA,Y,4NCJrB,IAAM7B,EAAgB,CACpB8C,OAAQ,CACN,CAAEN,GAAI,EAAGO,aAAc,OAAQ5B,KAAM,uCAAUC,MAAO,GACtD,CAAEoB,GAAI,EAAGO,aAAc,OAAQ5B,KAAM,uCAAUC,MAAO,GACtD,CAAEoB,GAAI,EAAGO,aAAc,OAAQ5B,KAAM,uCAAUC,MAAO,KAoF3C4B,E,YA/Eb,WAAY1C,GAAQ,IAAD,8BACjB,4CAAMA,KAeR2C,eAAiB,SAAAzC,GACG,UAAdA,EAAM0C,MACR,EAAK5C,MAAM6C,uBACT,EAAK1C,MAAM2C,SACX,EAAK3C,MAAMW,OAEb,EAAKN,SAAS,CAACsC,SAAU,MACzBC,QAAQC,IAAI,wBApBd,EAAK7C,M,qVAAL,IAAkBT,EAAlB,CAAiCoD,SAAU,KAAMhC,MAAO,MACxD,EAAKmC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKP,eAAiB,EAAKA,eAAeO,KAApB,gBACtB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,yEASPhB,EAAGpB,GACbtB,KAAKgB,SAAS,SAAAL,GAAK,MAAK,CACtB2C,SAAUZ,EACVpB,MAAOA,O,mCAeEZ,GACXV,KAAKgB,SAAS,CAAEM,MAAOZ,EAAMU,OAAOE,U,+BAG5B,IAAD,SACsBtB,KAAKW,MAAlB2C,GADT,EACCN,OADD,EACSM,UACVV,EAAa5C,KAAKQ,MAAMmC,MAAMC,WAC9BgB,EAAW5D,KAAKQ,MAAMqD,WAAWf,KACnC9C,KAAKQ,MAAMqD,WAAWf,KACtB,CAAC,EAAG,EAAG,EAAG,GACd,OACE,6BACIc,EAASE,IAAI,SAACC,EAAMC,GAAP,OACb,yBACEZ,IAAKY,EACLtC,UAAU,6BACVF,MAAO,CAAEyC,QAAS,SAElB,yBAAKzC,MAAO,CAAE0C,YAAa,SAAWtB,EAAWoB,IAChDA,IAAUV,EACT,2BACE3B,KAAK,OACLL,MAAO,EAAKX,MAAMW,MAClB6C,WAAY,EAAKhB,eACjBhC,SAAU,EAAKwC,aACfnC,MAAO,CAAC4C,SAAU,UAGpB,yBAAKC,QAAS,kBAAM,EAAKZ,YAAYO,EAAOD,KAAQA,W,GAxDxChC,aCJXuC,EANO,SAAA9D,GAAK,OACzB,kBAAC,EAAgByB,SAAjB,KACG,SAAArB,GAAQ,OAAI,kBAAC2D,EAAD,eAAW3D,SAAUA,GAAcJ,OAMpD,SAAS+D,EAAU/D,GAQjB,OAAO,4BAAQ6D,QAPf,SAAqBG,GACnBA,EAAEtD,iBACFV,EAAM2B,QAAQ,MACd3B,EAAMI,SAAS5B,YACfuE,QAAQC,IAAI,2BAGP,Y,4NCTT,IAQMiB,E,YACJ,WAAYjE,GAAQ,IAAD,8BACjB,4CAAMA,KAEDG,MAAQ,CACX+D,YAAY,EACZ7B,OAAQ,CACN,CACExB,KAAM,WACNyB,KAAM,CAAC,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,MAEvC,CACEzB,KAAM,WACNyB,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,KAEtC,CACEzB,KAAM,WACNyB,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGvCH,MAAO,CACLC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAE/D+B,iBAAkB,GAEpB,EAAKtB,uBAAyB,EAAKA,uBAAuBK,KAA5B,gBAC9B,EAAKkB,cAAgB,EAAKA,cAAclB,KAAnB,gBAzBJ,E,2EA4BLmB,GACZ7E,KAAKgB,SAAS,CAAE2D,iBAAkBE,M,0CAIf,IAAD,OAClB7E,KAAKQ,MAAMI,SAASrB,KAAKS,KAAKQ,MAAMsE,SAASC,KAAK,QAAS,SAAAC,GACzD,IAAMC,EAAiBD,EAASE,MAE5BC,EAAe,GAEbF,IACJE,EAAeC,OAAOC,KAAKJ,GAAgBnB,IAAI,SAAAV,GAAG,O,qVAAA,IAC7C6B,EAAe7B,GAD8B,CAEhD5D,IAAK4D,OAIT,IAAIP,EAAM,YAAO,EAAKlC,MAAMkC,QAE5B,EAAKlC,MAAMkC,OAAOiB,IAAI,SAACwB,EAAMC,GAC3B,IAAIC,EAAYF,EAAKjE,KACjBoE,EAAe,EAAK9E,MAAMkC,OAAO0C,GAAWzC,KAAKgB,IAAI,SAAC4B,EAAU1B,GAClE,IAAI2B,EAAY,EAAKhF,MAAMgC,MAAMC,WAAWoB,GAIxC4B,EAAeT,EAAaU,OAC9B,SAAAC,GAAQ,OACNA,EAASC,aAAeP,GACxBM,EAASE,aAAeL,IAE5B,OAAIC,EAAaK,OAAS,EACTC,WAAWN,EAAa,GAAGtE,OAIrCoE,IAGT7C,EAAO0C,GAAWzC,KAAO2C,IAQ3B,EAAKzE,SAAS,CACZ6B,SACA6B,YAAY,Q,6CAKKyB,EAAsBC,GAAe,IAAD,OACzDpG,KAAKgB,SAAS,CACZ0D,YAAY,IAEd,IAAIC,EAAmB3E,KAAKW,MAAMgE,iBAE9B9B,EAAM,YAAO7C,KAAKW,MAAMkC,QACxBwD,EAAiB,YAAOxD,EAAO8B,GAAkB7B,MACrDuD,EAAkBF,GAAwBD,WAAWE,GACrDvD,EAAO8B,GAAkB7B,KAAOuD,EAEhC,IAAIC,EAAYC,KAAKC,MACjBC,EAAWzG,KAAKW,MAAMgC,MAAMC,WAAWuD,GACvCO,EAAO1G,KAAKW,MAAMkC,OAAO8B,GAAkBtD,KAC3C4B,EAAeyD,EAAO,MAAQD,EAElCzG,KAAKQ,MAAMI,SACRrB,KAAKS,KAAKQ,MAAMsE,SAChB6B,MAAM1D,GACNlC,IAAI,CACHO,MAAO8E,EACPL,WAAYW,EACZV,WAAYS,EACZG,OAAQ,aACRN,cAEDzF,KAAK,WACJ0C,QAAQC,IAAI,+BAGhBxD,KAAKQ,MAAMI,SACRjB,WAAWsD,GACX0D,MAAM3G,KAAKQ,MAAMsE,SACjB/D,IAAI,CACHO,MAAO8E,EACPL,WAAY/F,KAAKW,MAAMkC,OAAO8B,GAAkBtD,KAChD2E,WAAYhG,KAAKW,MAAMgC,MAAMC,WAAWuD,GACxCS,OAAQ,aACRN,cAEDzF,KAAK,WACJ0C,QAAQC,IAAI,6BACZ,EAAKxC,SAAS,CAAE6B,SAAQ6B,YAAY,Q,6CAYxC1E,KAAKQ,MAAMI,SAASrB,OAAOsH,MAC3B7G,KAAKQ,MAAMI,SAASjB,aAAakH,Q,+BAGzB,IAAD,EACwC7G,KAAKW,MAA9C+D,EADC,EACDA,WAAY7B,EADX,EACWA,OAAQ8B,EADnB,EACmBA,iBACtBd,EAAahB,EAAO8B,GACpBmC,EAAQjE,EAAOiB,IAAI,SAACC,GAAD,OAAUA,EAAK1C,OAGtC,OACE,yBAAKK,UAAU,mBACb,yBAAKF,MAAO,CAAEuB,MAAO,QAASgE,UAAW,UACtCrC,EAAa,MACZ,kBAAC,EAAD,CACEI,QAAS9E,KAAKQ,MAAMsE,QACpBjC,OAAQ7C,KAAKW,MAAMkC,OACnBF,MAAO3C,KAAKW,MAAMgC,SAIxB,yBAAKnB,MAAO,CAAE0C,YAAa,SACzB,0BAAM1C,MAAO,CAAE0C,YAAa,SAAWlE,KAAKQ,MAAML,UAClD,8BACE,kBAAC,EAAD,CAAegC,QAASnC,KAAKQ,MAAM2B,WAErC,kBAAC6E,EAAD,CAAoBF,MAAOA,EAAOnC,iBAAkBA,EAAkBC,cAAe5E,KAAK4E,gBAC1F,kBAAC,EAAD,CACEE,QAAS9E,KAAKQ,MAAMsE,QACpBjB,WAAYA,EACZlB,MAAO3C,KAAKW,MAAMgC,MAClBsE,YAAajH,KAAKQ,MAAMyG,YACxB5D,uBAAwBrD,KAAKqD,+B,GA1KGvF,IAAMiE,WAkLnCmF,EA1LW,SAAA1G,GAAK,OAC7B,kBAAC,EAAgByB,SAAjB,KACG,SAAArB,GAAQ,OACP,kBAAC,EAAD,eAA+BA,SAAUA,GAAcJ,OAyL7D,SAASwG,EAAT,GAAyE,IAA3CF,EAA0C,EAA1CA,MAAOnC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cAErD,OAAO,yBAAKlD,UAAU,mBACnBoF,EAAMhD,IAAI,SAACC,EAAMC,GAAP,OACT,uBACEZ,IAAKW,EACLM,QAAS,kBAAMO,EAAcZ,IAC7BtC,UAAU,6BACTiD,IAAqBX,EAAQ,2BAAID,GAAYA,M,ICtIvCoD,E,YAxDb,WAAY3G,GAAQ,IAAD,8BACjB,4CAAMA,KAQR2B,QAAU,SAAA5C,GACR,GAAa,OAATA,EACF,EAAKyB,SAAS,CAAE8D,QAAS,KAAM3E,SAAU,WACpC,CACL,IAAI2E,EAAUvF,EAAK,GAAGC,IAAI4H,QAAQ,KAAM,KACxCtC,EAAUA,EAAQsC,QAAQ,MAAO,KACjC,EAAKpG,SAAS,CAAE8D,UAAS3E,SAAUZ,EAAK,GAAGC,QAZ7C,EAAKmB,MAAQ,CACXR,SAAU,KACV2E,QAAS,MALM,E,sEAmBT,IAAD,EACuB9E,KAAKW,MAA3BR,EADD,EACCA,SAAU2E,EADX,EACWA,QAGlB,OAFAvB,QAAQC,IAAIrD,EAAU2E,GAGpB,kBAAC,IAAD,CAAYuC,SAAS,KACnB,6BAaE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,IAC9C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,iBAAiBC,UAAWE,IAC9C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,mBAAmBC,UAAWG,IAChD,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,gBAAgBC,UAAWI,IAC7C,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAK,kBAAkBC,UAAWK,IAC/C,kBAAC,IAAD,CACEP,OAAK,EACLC,KAAK,wBACLC,UAAWM,IAEb,kBAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,oBAAoBC,UAAWO,IACjD,kBAAC,IAAD,CAAOR,KAAK,SAASC,UAAWQ,U,GAlDxBlK,IAAMiE,WA2DlB0F,EAAY,SAAC,GAAD,IAAGQ,EAAH,EAAGA,MAAH,OAChB,kBAAC,EAAD,CAAahB,YAAY,OAAOiB,OAAQD,EAAMC,UAE1CR,EAAY,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAH,OAChB,kBAAC,EAAD,CAAahB,YAAY,OAAOiB,OAAQD,EAAMC,UAE1CP,EAAc,SAAC,GAAD,IAAGM,EAAH,EAAGA,MAAH,OAClB,kBAAC,EAAD,CAAahB,YAAY,SAASiB,OAAQD,EAAMC,UAE5CN,EAAW,SAAC,GAAD,IAAGK,EAAH,EAAGA,MAAH,OACf,kBAAC,EAAD,CAAahB,YAAY,MAAMiB,OAAQD,EAAMC,UAEzCL,EAAa,SAAC,GAAD,IAAGI,EAAH,EAAGA,MAAH,OACjB,kBAAC,EAAD,CAAahB,YAAY,QAAQiB,OAAQD,EAAMC,UAE3CJ,EAAmB,SAAC,GAAD,IAAGG,EAAH,EAAGA,MAAH,OACvB,kBAAC,EAAD,CAAahB,YAAY,cAAciB,OAAQD,EAAMC,UAEjDH,EAAe,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OACnB,kBAAC,EAAD,CAAahB,YAAY,UAAUiB,OAAQD,EAAMC,UAE7CF,EAAQ,kBAAM,sCAEdG,E,YACJ,WAAY3H,GAAQ,IAAD,8BACjB,4CAAMA,KAQR2B,QAAU,SAAA5C,GACR,GAAa,OAATA,EACF,EAAKyB,SAAS,CAAE8D,QAAS,KAAM3E,SAAU,WACpC,CACL,IAAI2E,EAAUvF,EAAK,GAAGC,IAAI4H,QAAQ,KAAM,KACxCtC,EAAUA,EAAQsC,QAAQ,MAAO,KACjC,EAAKpG,SAAS,CAAE8D,UAAS3E,SAAUZ,EAAK,GAAGC,QAZ7C,EAAKmB,MAAQ,CACXR,SAAU,KACV2E,QAAS,MALM,E,sEAmBT,IAAD,EACuB9E,KAAKW,MAA3BR,EADD,EACCA,SAAU2E,EADX,EACWA,QAGlB,OAFAvB,QAAQC,IAAIrD,EAAU2E,GAGpB,6BACGA,EACC,kBAAC,IAAMsD,SAAP,KACE,kBAAC,EAAD,CACCtD,QAASA,EACT3E,SAAUH,KAAKW,MAAMR,SACrB8G,YAAajH,KAAKQ,MAAMyG,YACxB9E,QAASnC,KAAKmC,WASjB,kBAAC,IAAMiG,SAAP,KACE,kBAAC,EAAD,CAAYjG,QAASnC,KAAKmC,UAC1B,6BACA,kBAAC,EAAD,Y,GA5CcrE,IAAMiE,WCrFZsG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASP,MACvB,2DCVNQ,IAASC,OACL,kBAAC,EAAgBC,SAAjB,CAA0BrH,MAAO,IAAI9C,GACzC,kBAAC,EAAD,OAGEoK,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnI,KAAK,SAAAoI,GACjCA,EAAaC,iB","file":"static/js/main.28aba07c.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","import FirebaseContext from './context';\n\nimport app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\n// import { FIREBASE_CONFIG } from \"./constants\";\n\n// const {\n//     apiKey,\n//     authDomain,\n//     databaseURL,\n//     messagingSenderId,\n//     projectId,\n//     storageBucket\n// } = FIREBASE_CONFIG;\n\nconst config = {\n    apiKey: \"AIzaSyCQAXoLiWogLUag9edVH9Lzih0hPKgQod4\",\n    authDomain: \"econolabsdata.firebaseapp.com\",\n    databaseURL: \"https://econolabsdata.firebaseio.com\",\n    projectId: \"econolabsdata\",\n    storageBucket: \"\",\n    messagingSenderId: \"861588864561\",\n    appId: \"1:861588864561:web:5b815e6837a042fe\"\n    // apiKey,\n    // authDomain,\n    // databaseURL,\n    // projectId,\n    // storageBucket,\n    // messagingSenderId\n};\n\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.database();\n    }\n\n    // *** Auth API ***\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = password =>\n        this.auth.currentUser.updatePassword(password);\n\n    // *** User API ***\n\n    user = uid => this.db.ref(`databyuser/${uid}`);\n\n    databycode = code => this.db.ref(`databycode/${code}`);\n\n    users = () => this.db.ref('users');\n\n}\n\nexport default Firebase;\n\nexport { FirebaseContext };","import React, { Component, useState } from \"react\";\n\nimport { FirebaseContext } from \"../config/Firebase\";\n\nimport \"../app.css\";\n\nconst INITIAL_STATE = {\n  username: \"\",\n  email: \"\",\n  passwordOne: \"\",\n  passwordTwo: \"\",\n  error: null\n};\n\nconst SignUpForm = () => (\n  <FirebaseContext.Consumer>\n    {firebase => <MyForm firebase={firebase} />}\n  </FirebaseContext.Consumer>\n);\n\nclass MyForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { username, email, passwordOne } = this.state;\n\n    this.props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        // Create a user in your Firebase realtime database\n        return this.props.firebase.user(authUser.user.uid).set({\n          username,\n          email\n        });\n      })\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\n\n    const isInvalid =\n      passwordOne !== passwordTwo ||\n      passwordOne === \"\" ||\n      email === \"\" ||\n      username === \"\";\n\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} style={{ marginTop: '1rem' }}>\n          <div className=\"SignUpFormInput\">\n            <h3 className=\"SignUpFormInput\">Или зарегистрируйтесь</h3>\n\n            <input\n              name=\"username\"\n              value={username}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Name\"\n            />\n          </div>\n          <div className=\"SignUpFormInput\">\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n          <div className=\"SignUpFormInput\">\n            <input\n              name=\"passwordOne\"\n              value={passwordOne}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"SignUpFormInput\">\n            <input\n              name=\"passwordTwo\"\n              value={passwordTwo}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n            />\n          </div>\n\n          <div className=\"SignUpFormInput\">\n            <button disabled={isInvalid} type=\"submit\">\n              Зарегистрироваться\n            </button>\n            {error && <p>{error.message}</p>}\n          </div>\n        </form>\n        {/* <BaseuIForm /> */}\n      </div>\n    );\n  }\n}\n\nexport default SignUpForm;\n\n// function BaseuIForm() {\n//   // Declare a new state variable, which we'll call \"count\"\n//   const [value, setValue] = React.useState('');\n//   return (\n//     <FormControl label=\"Input label\" caption=\"Input caption\">\n//       <Input\n//         id=\"input-id\"\n//         value={value}\n//         onChange={event => setValue(event.currentTarget.value)}\n//       />\n//     </FormControl>\n//   );\n// }\n","import React, { Component } from 'react';\nimport { FirebaseContext } from '../config/Firebase';\n\nimport \"../app.css\";\n\nconst SignInForm = (props) => (\n  <FirebaseContext.Consumer>\n    {firebase => <MyForm firebase={firebase} {...props}/>}\n  </FirebaseContext.Consumer>\n);\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n  error: null,\n  user: null\n};\n\nclass MyForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE };\n  }\n\n  onSubmit = event => {\n    const { email, password } = this.state;\n\n    this.props.firebase\n      .doSignInWithEmailAndPassword(email, password)\n      .then((res) => {\n        this.setState({ ...INITIAL_STATE, user: res.user.email });\n     //   console.log('Signed in!!!');\n     //   console.log(res);\n        this.props.onLogin(res.user.providerData); \n      })\n      .catch(error => {\n        this.setState({ error });\n      });\n\n    event.preventDefault();\n  };\n\n  onChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const { email, password, error } = this.state;\n\n    const isInvalid = password === '' || email === '';\n\n    return (\n      <div>\n        {this.state.user ?\n          <p>{this.state.user}</p> :\n          <form onSubmit={this.onSubmit} style={{marginBottom: '20px'}}>\n          <div className=\"flexRowOrColumn\">\n             {/* <div style={{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}> */}\n            <input\n              name=\"email\"\n              value={email}\n              onChange={this.onChange}\n              type=\"text\"\n              placeholder=\"Email Address\"\n            />\n            <input\n              name=\"password\"\n              value={password}\n              onChange={this.onChange}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n            <button disabled={isInvalid} type=\"submit\">\n              Войти\n        </button>\n        </div>\n            {error && <p>{error.message}</p>}\n          </form>\n        }\n      </div>\n\n    );\n  }\n}\n\nexport default SignInForm;\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass ChartLayout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {\r\n        chart: {\r\n          id: \"basic-bar\"\r\n        },\r\n        xaxis: {\r\n          categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\r\n        }\r\n      },\r\n      series: this.props.series ? this.props.series :\r\n      [\r\n        {\r\n          name: \"series-1\",\r\n          data: [100, 100, 100, 100, 100, 100, 100, 100]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"row\">\r\n          <div className=\"mixed-chart\">\r\n            <Chart\r\n              options={this.state.options}\r\n              series={this.state.series}\r\n              type=\"bar\"\r\n              width=\"880\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartLayout;","import React, { Component } from \"react\";\r\nimport { FirebaseContext } from \"../config/Firebase\";\r\n\r\nconst FirebaseUserInput = props => (\r\n  <FirebaseContext.Consumer>\r\n    {firebase => <MyForm firebase={firebase} {...props} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nclass MyForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert(\"A name was submitted: \" + this.state.value);\r\n    event.preventDefault();\r\n\r\n    let timestamp =Date.now();\r\n\r\n    this.props.firebase\r\n      .user(this.props.useruid)\r\n      .child(this.props.firebasecode)\r\n      .set({\r\n        value: this.state.value,\r\n        name: this.props.name,\r\n        timestamp\r\n      })\r\n      .then(() => {\r\n        console.log(\"Successfully set for User\");\r\n      });\r\n\r\n      this.props.firebase\r\n      .databycode(this.props.firebasecode)\r\n      .child(this.props.useruid)\r\n      .set({\r\n        value: this.state.value,\r\n        name: this.props.name,\r\n        timestamp\r\n      })\r\n      .then(() => {\r\n        console.log(\"Successfully set for Code\");\r\n        this.props.handleClick(null);\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.firebase.user().off();\r\n    this.props.firebase.databycode().off();\r\n  }\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    console.log(this.props);\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          {this.props.name}:\r\n          <input type=\"text\" value={value} onChange={this.handleChange} />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirebaseUserInput;\r\n","import React, { Component } from \"react\";\nimport \"../app.css\";\n\nimport FirebaseUserInput from \"./FirebaseUserInput\";\n\nconst INITIAL_STATE = {\n  inputs: [\n    { id: 1, firebasecode: \"1111\", name: \"Первый\", value: 1 },\n    { id: 2, firebasecode: \"1112\", name: \"Второй\", value: 1 },\n    { id: 3, firebasecode: \"1113\", name: \"Третий\", value: 1 }\n  ]\n};\n\nclass TableLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { ...INITIAL_STATE, selected: null, value: \" \" };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick(id,value) {\n    this.setState(state => ({\n      selected: id,\n      value: value\n    }));\n  }\n\n  handleKeyPress = event => {\n    if (event.key === \"Enter\") {\n      this.props.handleSeriesDataChange(\n        this.state.selected,\n        this.state.value\n      );\n      this.setState({selected: 100});\n      console.log(\"enter press here! \");\n    }\n  };\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  render() {\n    const { inputs, selected } = this.state;\n    const categories = this.props.xaxis.categories;\n    const dataline = this.props.seriesLine.data\n      ? this.props.seriesLine.data\n      : [1, 2, 3, 4];\n    return (\n      <div>\n         {dataline.map((item, index) => (\n          <div\n            key={index}\n            className=\"HorizontalFlexSpaceBetween\"\n            style={{ padding: \"10px\" }}\n          >\n            <div style={{ marginRight: \"2rem\" }}>{categories[index]}</div>\n            {index === selected ? (\n              <input\n                type=\"text\"\n                value={this.state.value}\n                onKeyPress={this.handleKeyPress}\n                onChange={this.handleChange}\n                style={{maxWidth: '5rem'}}\n              />\n            ) : (\n              <div onClick={() => this.handleClick(index, item)}>{item}</div>\n            )}\n          </div>\n        ))}\n        {/* {inputs.length > 1 &&\n          inputs.map((item, index) => (\n            <div key={item.firebasecode}>\n              {item.id === selected ? (\n                <FirebaseUserInput\n                  name={item.name}\n                  firebasecode={item.firebasecode}\n                  useruid={this.props.useruid}\n                  handleClick={this.handleClick}\n                />\n              ) : (\n                <p onClick={() => this.handleClick(item.id)}>{item.value}</p>\n              )}\n            </div>\n          ))} */}\n      </div>\n    );\n  }\n}\n\nexport default TableLayout;\n","import React from \"react\";\nimport { FirebaseContext } from \"../config/Firebase\";\n\nconst SignOutButton = props => (\n  <FirebaseContext.Consumer>\n    {firebase => <DoSignOut firebase={firebase} {...props} />}\n  </FirebaseContext.Consumer>\n);\n\nexport default SignOutButton;\n\nfunction DoSignOut(props) {\n  function handleClick(e) {\n    e.preventDefault();\n    props.onLogin(null);\n    props.firebase.doSignOut();\n    console.log(\"The link was clicked.\");\n  }\n\n  return <button onClick={handleClick}>Sign Out</button>;\n}\n","import React from \"react\";\n\nimport { FirebaseContext } from \"../config/Firebase\";\n\nimport ChartLayout from \"../charts/ChartLayout\";\nimport TableLayout from \"./TableLayout\";\nimport SignOutButton from \"../config/SignOutButton\";\n\nimport \"../app.css\";\n\nconst ChartEditorLayout = props => (\n  <FirebaseContext.Consumer>\n    {firebase => (\n      <ChartEditorLayoutWithFirebase firebase={firebase} {...props} />\n    )}\n  </FirebaseContext.Consumer>\n);\n\nclass ChartEditorLayoutWithFirebase extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUpdating: true,\n      series: [\n        {\n          name: \"series-1\",\n          data: [100, 40, 45, 100, 49, 60, 70, 100]\n        },\n        {\n          name: \"series-2\",\n          data: [10, 20, 30, 100, 80, 70, 30, 10]\n        },\n        {\n          name: \"series-3\",\n          data: [50, 25, 35, 60, 50, 40, 20, 10]\n        }\n      ],\n      xaxis: {\n        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\n      },\n      activeSeriesLine: 0,\n    };\n    this.handleSeriesDataChange = this.handleSeriesDataChange.bind(this);\n    this.setActiveLine = this.setActiveLine.bind(this);\n  }\n\n  setActiveLine(activeLine) {\n    this.setState({ activeSeriesLine: activeLine });\n //   console.log(activeLine);\n  }\n\n  componentDidMount() {\n    this.props.firebase.user(this.props.useruid).once(\"value\", snapshot => {\n      const userdataObject = snapshot.val();\n\n      let userdataList = [];\n\n      if (!!userdataObject) {\n        userdataList = Object.keys(userdataObject).map(key => ({\n          ...userdataObject[key],\n          uid: key\n        }));\n      }\n\n      let series = [...this.state.series];\n\n      this.state.series.map((line, lineIndex) => {\n        let seriename = line.name;\n        let newseriedata = this.state.series[lineIndex].data.map((oldValue, index) => {\n          let xaxisItem = this.state.xaxis.categories[index];\n          // console.log(xaxisItem);\n          // console.log(seriename);\n          // console.log(oldValue);\n          let userdataitem = userdataList.filter(\n            dataitem =>\n              dataitem.dimension1 === seriename &&\n              dataitem.dimension2 === xaxisItem\n          );\n          if (userdataitem.length > 0) {\n            let newValue = parseFloat(userdataitem[0].value);\n         //   console.log(newValue);\n            return newValue\n          }\n          return oldValue;\n        });\n\n        series[lineIndex].data = newseriedata;\n     //   console.log(newseriedata);\n      }\n      );\n\n\n\n\n      this.setState({\n        series,\n        isUpdating: false\n      });\n    });\n  }\n\n  handleSeriesDataChange(datalineArrayElement, elementValue) {\n    this.setState({\n      isUpdating: true\n    });\n    let activeSeriesLine = this.state.activeSeriesLine;\n\n    let series = [...this.state.series];\n    let datalineDataArray = [...series[activeSeriesLine].data];\n    datalineDataArray[datalineArrayElement] = parseFloat(elementValue);\n    series[activeSeriesLine].data = datalineDataArray;\n\n    let timestamp = Date.now();\n    let category = this.state.xaxis.categories[datalineArrayElement];\n    let xaxe = this.state.series[activeSeriesLine].name;\n    let firebasecode = xaxe + \"___\" + category;\n\n    this.props.firebase\n      .user(this.props.useruid)\n      .child(firebasecode)\n      .set({\n        value: elementValue,\n        dimension1: xaxe,\n        dimension2: category,\n        source: \"Basic Line\",\n        timestamp\n      })\n      .then(() => {\n        console.log(\"Successfully set for User\");\n      });\n\n    this.props.firebase\n      .databycode(firebasecode)\n      .child(this.props.useruid)\n      .set({\n        value: elementValue,\n        dimension1: this.state.series[activeSeriesLine].name,\n        dimension2: this.state.xaxis.categories[datalineArrayElement],\n        source: \"Basic Line\",\n        timestamp\n      })\n      .then(() => {\n        console.log(\"Successfully set for Code\");\n        this.setState({ series, isUpdating: false });\n      });\n\n    // setTimeout(\n    //   function() {\n    //     this.setState({ series, isUpdating: false });\n    //   }.bind(this),\n    //   2000\n    // );\n  }\n\n  componentWillUnmount() {\n    this.props.firebase.user().off();\n    this.props.firebase.databycode().off();\n  }\n\n  render() {\n    let { isUpdating, series, activeSeriesLine } = this.state;\n    let seriesLine = series[activeSeriesLine];\n    let lines = series.map((item) => item.name);\n\n   // console.log(series);\n    return (\n      <div className=\"flexRowOrColumn\">\n        <div style={{ width: \"900px\", maxHeight: \"500px\" }}>\n          {isUpdating ? '...' :\n            <ChartLayout\n              useruid={this.props.useruid}\n              series={this.state.series}\n              xaxis={this.state.xaxis}\n            />\n          }\n        </div>\n        <div style={{ marginRight: \"2rem\" }}>\n          <span style={{ marginRight: \"2rem\" }}>{this.props.username}</span>\n          <span>\n            <SignOutButton onLogin={this.props.onLogin} />\n          </span>\n          <ChooseLineInSeries lines={lines} activeSeriesLine={activeSeriesLine} setActiveLine={this.setActiveLine} />\n          <TableLayout\n            useruid={this.props.useruid}\n            seriesLine={seriesLine}\n            xaxis={this.state.xaxis}\n            typeofchart={this.props.typeofchart}\n            handleSeriesDataChange={this.handleSeriesDataChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChartEditorLayout;\n\nfunction ChooseLineInSeries({ lines, activeSeriesLine, setActiveLine }) {\n // console.log(activeSeriesLine);\n  return <div className=\"flexRowOrColumn\">\n    {lines.map((item, index) =>\n      <p\n        key={item}\n        onClick={() => setActiveLine(index)}\n        className=\"hover-underline-animation\">\n        {activeSeriesLine === index ? <b>{item}</b> : item}\n      </p>)}\n  </div>\n}\n","import React from \"react\";\n\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\n\nimport SignUpForm from \"./config/SignUpForm\";\nimport SignInForm from \"./config/SignInForm\";\n\n// import AllUsers from \"./config/AllUsers\";\n// import UserData from \"./editor/UserData\";\n\n\nimport ChartEditorLayout from \"./editor/ChartEditorLayout\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      useruid: null\n    };\n  }\n\n  onLogin = user => {\n    if (user === null) {\n      this.setState({ useruid: null, username: null });\n    } else {\n      let useruid = user[0].uid.replace(/@/g, \"-\");\n      useruid = useruid.replace(/\\./g, \"_\");\n      this.setState({ useruid, username: user[0].uid });\n    }\n  };\n\n  render() {\n    const { username, useruid } = this.state;\n    console.log(username, useruid);\n    //   let useruid = str.replace(/@/g, \"-\");\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          {/* <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/mychart\">My Chart</Link>\n            </li>\n          </ul>\n          <hr /> */}\n          <Route exact path=\"/linechart/:id\" component={LineChart} />\n          <Route exact path=\"/areachart/:id\" component={AreaChart} />\n          <Route exact path=\"/columnchart/:id\" component={ColumnChart} />\n          <Route exact path=\"/barchart/:id\" component={BarChart} />\n          <Route exact path=\"/mixedchart/:id\" component={MixedChart} />\n          <Route\n            exact\n            path=\"/candlestickchart/:id\"\n            component={CandlestickChart}\n          />\n          <Route exact path=\"/scatterchart/:id\" component={ScatterChart} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n\nconst LineChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Line\" params={match.params} />\n);\nconst AreaChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Area\" params={match.params} />\n);\nconst ColumnChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Column\" params={match.params} />\n);\nconst BarChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Bar\" params={match.params} />\n);\nconst MixedChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Mixed\" params={match.params} />\n);\nconst CandlestickChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Candlestick\" params={match.params} />\n);\nconst ScatterChart = ({ match }) => (\n  <AppWithAuth typeofchart=\"Scatter\" params={match.params} />\n);\nconst About = () => <h2>About</h2>;\n\nclass AppWithAuth extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      useruid: null\n    };\n  }\n\n  onLogin = user => {\n    if (user === null) {\n      this.setState({ useruid: null, username: null });\n    } else {\n      let useruid = user[0].uid.replace(/@/g, \"-\");\n      useruid = useruid.replace(/\\./g, \"_\");\n      this.setState({ useruid, username: user[0].uid });\n    }\n  };\n\n  render() {\n    const { username, useruid } = this.state;\n    console.log(username, useruid);\n    //   let useruid = str.replace(/@/g, \"-\");\n    return (\n      <div>\n        {useruid ? (\n          <React.Fragment>\n            <ChartEditorLayout\n             useruid={useruid}\n             username={this.state.username}\n             typeofchart={this.props.typeofchart}\n             onLogin={this.onLogin}\n             />\n            \n            {/* <AllUsers />\n            <UserData useruid={useruid} />\n            */}\n          </React.Fragment> \n        ) : (\n\n          <React.Fragment>\n            <SignInForm onLogin={this.onLogin} />\n            <hr/>\n            <SignUpForm />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport Firebase, { FirebaseContext } from './config/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n<App />\n    </FirebaseContext.Provider>\n\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}